{"version":3,"sources":["static/images/ViaDe.svg","static/images/campanita.png","components/commons/languages/En.js","components/commons/languages/Es.js","components/commons/Internationalization.js","components/login/User.js","components/login/LoginButton.js","components/commons/Properties.js","components/basics/ToastNotification.js","components/solidPod/UpdateList.js","components/solidPod/UploadToPod.js","components/basics/BasicButton.js","components/solidPod/MapList.js","components/map/Map.js","components/basics/ImputField.js","components/share/ShowFriends.js","components/share/FileList.js","components/share/Share.js","components/notifications/Notification.js","components/login/ISelector.js","components/Main.js","index.js"],"names":["module","exports","Language","Logueado","Refrescar","Subir","Sesion","Amigos","Notificaciones","Compartir","URI","Enviar","SP","EN","Layer","Actualizar","Desconectar","Identificate","Error403","Error404","ErrorI","Archivo404","ErrorPermisos","Rutas404","Enviada","ArchivoSubido","ArchivoSubidoa","Bienvenido","ErrorArchivoNull","ErrorAmigosNull","ErrorMapaIncompatible","HerramientaRutas","HerramientaRutasEnlace","ErrorCentro","ErrorCentroDescripcion","ListaRutas","ListaArchivos","Internationalization","Option","Es","change","languaje","update","En","User","className","id","data-testid","I","href","useWebId","Value","src","LoginButton","AuthButton","popup","login","logout","React","Component","properties","myFolder","myFolderSinBarra","shareFolder","profile","inbox","inboxSinBarra","layers","Notification","tipo","titulo","mensaje","store","addNotification","title","message","type","insert","container","animationIn","animationOut","dismiss","duration","onScreen","funtionUpdateList","funtionUpdateList1","funtionUpdateList2","UploadHook","webid","String","replace","UploadToPod","handleFiles","files","reader","FileReader","onload","a","fc","FileClient","auth","fileName","name","url","createFile","result","notification","console","log","readAsText","this","fileTypes","Button","SubmitButton","props","class","disabled","onClick","text","require","getFiles","storage","trackSession","session","webId","readFolder","then","content","folder","catch","err","URL","rutaView","itemExists","readFile","rutaViewStJ","JSON","parse","filesToButtons","buttons","entries","index","value","endsWith","push","key","readRoute","ListClass","updateList","state","lista","bind","asincFiles","filesHtml","setState","Wrapper","styled","div","Map","actual","layer","map","L","center","zoom","zoomControl","setLayer","fileJson","error_center","features","geometry","coordinates","setView","error","geoJSON","addTo","length","removeFrom","tileLayer","detectRetina","maxZoom","maxNativeZoom","Fragment","cambiar","MapList","ImputField","placeholder","onChange","e","target","ShowFriends","enviar","items","checkedValue","indice","inputElements","document","getElementsByName","i","checked","getMarcados","useLDflexList","filter","slice","Infinity","item","sendNotification","userWebId","friendWebId","fileId","request","method","uri","body","headers","response","Hook","folderId","userId","Share","archivo","amigo","amigos","publicRute","copyFile","status","friendInbox","property","val","trim","setInputValue","FileList","getNNotifications","FC","NotificationHook","_isMounted","nNotifications","inboxUrl","updateNotifications","num","campanita","alt","testid","ISelector","selected","select","getElementById","Main","forceUpdate","LoggedOut","logo","LoggedIn","rel","ReactDOM","render"],"mappings":"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","file":"static/js/main.56b508f1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ViaDe.5e67345f.svg\";","module.exports = __webpack_public_path__ + \"static/media/campanita.7dec6a40.png\";","const Language = {\n    Logueado: \"Wellcome, \",\n    Refrescar: \"Refresh\",\n    Subir: \"Upload file\",\n    Sesion: \"Log In\",\n    Amigos: \"Select friends:\",\n    Notificaciones: \"Notifications\",\n    Compartir: \"Share file\",\n    URI: \"Selected URI file:\",\n    Enviar: \"Send to friends\",\n    SP: \"Spanish\",\n    EN: \"English\",\n    Layer: \"Change Layer\",\n    Actualizar: \"Update list\",\n    Desconectar: \"Disconnect\",\n    Identificate: \"Identificate\",\n    Error403: \"Error 403\",\n    Error404: \"Error 404\",\n    ErrorI: \"Error unidentified\",\n    Archivo404: \"The selected file does not exist\",\n    ErrorPermisos: \"The application has insufficient permissions to perform this action\",\n    Rutas404: \"The route list is empty\",\n    Enviada: \"Notification sented successfully\",\n    ArchivoSubido: \"File uploaded successfully\",\n    ArchivoSubidoa: \"File uploaded to \",\n    Bienvenido: \"Welcome to ViadeEs1a\",\n    ErrorArchivoNull: \"You must write the uri of some file\",\n    ErrorAmigosNull: \"You must select a friend\",\n    ErrorMapaIncompatible: \"The selected file is not compatible with the map\",\n    HerramientaRutas: \"To create a route on a map you can use \",\n    HerramientaRutasEnlace: \"this link\",\n    ErrorCentro: \"The selected route is not fully compatible\",\n    ErrorCentroDescripcion: \"The map could not be centered, but it was shown\",\n    ListaRutas: \"Route list:\",\n    ListaArchivos: \"File list:\"\n};\n\nexport default Language;","const Language = {\n    Logueado: \"Bienvenido, \",\n    Refrescar: \"Refrescar\",\n    Subir: \"Subir archivo\",\n    Sesion: \"Iniciar Sesión\",\n    Amigos: \"Seleccione amigos\",\n    Notificaciones: \"Notificaciones\",\n    Compartir: \"Compartir archivo\",\n    URI: \"URI del archivo seleccionado:\",\n    Enviar: \"Enviar a amigos\",\n    SP: \"Español\",\n    EN: \"Inglés\",\n    Layer: \"Cambiar layer\",\n    Actualizar: \"Actualizar lista\",\n    Desconectar: \"Desconectar\",\n    Identificate: \"Identifícate\",\n    Error403: \"Error 403\",\n    Error404: \"Error 404\",\n    ErrorI: \"Error no identificado\",\n    Archivo404: \"El archivo seleccionado no existe\",\n    ErrorPermisos: \"La aplicacion no hay permisos suficientes para realizar esta acción\",\n    Rutas404: \"La lista de rutas esta vacía\",\n    Enviada: \"Notificación enviada con éxito\",\n    ArchivoSubido: \"Archivo subido correctamente\",\n    ArchivoSubidoa: \"Archivo subido a \",\n    Bienvenido: \"Bienvenido a ViadeEs1a\",\n    ErrorArchivoNull: \"Debe escribir la uri de algún archivo\",\n    ErrorAmigosNull: \"Debe seleccionar algun amigo\",\n    ErrorMapaIncompatible: \"El archivo seleccionado no es compatible con el mapa\",\n    HerramientaRutas: \"Para crear una ruta sobre un mapa puede utilizar \",\n    HerramientaRutasEnlace: \"este enlace\",\n    ErrorCentro: \"La ruta seleccionada no es completamente compatible\",\n    ErrorCentroDescripcion: \"No se ha podido centrar el mapa, pero sí se ha mostrado\",\n    ListaRutas: \"Lista de rutas:\",\n    ListaArchivos: \"Lista de archivos:\"\n};\n\nexport default Language;","//import ReactDOM from \"react-dom\";\nimport En from \"./languages/En\";\nimport Es from \"./languages/Es\";\n\n\nlet Internationalization = {\n    Option: Es,\n    change: (languaje, update) => {\n        if (languaje === \"es\") {\n            Internationalization.Option = Es;\n        }\n        if (languaje === \"en\") {\n            Internationalization.Option = En;\n        }\n\n\n        update();\n        //ReactDOM.render(null, document.getElementsById(\"inter\"));\n\n    }\n};\n\nexport default Internationalization;","import React from \"react\";\nimport \"../../static/css/Main.css\";\nimport { useWebId, Value } from \"@solid/react\";\nimport I from \"../commons/Internationalization\";\n\nexport const User = () => {\n  return (\n    <div className=\"col-sm\">\n      <span id=\"estasLogueado\" data-testid=\"usert\">{I.Option.Logueado} <a href={useWebId()}><Value src=\"user.name\" /></a></span>\n      <p></p>\n    </div>\n  );\n};\nexport default User;\n","import React from \"react\";\nimport \"leaflet/dist/leaflet.css\";\nimport { AuthButton } from \"@solid/react\";\nimport I from \"../commons/Internationalization\";\n\n\nconst popUri = \"https://solid.community/common/popup.html\";\n\n\nexport default class LoginButton extends React.Component {\n\n\n    render() {\n        return (\n            <div data-testid=\"divLogin\">\n                <AuthButton className=\"btn btn-primary\" data-testid=\"btini\" popup={popUri} login={I.Option.Sesion} logout={I.Option.Desconectar} />\n            </div>\n        );\n    }\n}","const properties = {\n    //myFolder: \"/private/rutas/\",\n    myFolder: \"/viade/routes/\",\n    myFolderSinBarra: \"viade/routes/\",\n    shareFolder: \"/public/viade/routes/\",\n    profile: \"/profile/card#me\",\n    inbox: \"/inbox/\",\n    inboxSinBarra: \"inbox/\",\n    layers: [\n        //Terreno\n        \"http://tile.stamen.com/terrain/{z}/{x}/{y}.jpg\",\n        //Topografo\n        \"http://server.arcgisonline.com/ArcGIS/rest/services/World_Topo_Map/MapServer/tile/{z}/{y}/{x}\",\n        //Indicaciones\n        \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n        //Satelite\n        \"https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}\",\n        //Mordor\n        \"https://{s}.tile.thunderforest.com/spinal-map/{z}/{x}/{y}.png\"\n    ]\n};\n\nexport default properties;\n","import { store } from \"react-notifications-component\";\n\n\nfunction Notification(tipo, titulo, mensaje) {\n    if(tipo == null){\n        tipo = \"success\";\n    }\n    if(titulo == null){\n        titulo = \" \";\n    }\n    if(mensaje == null){\n        mensaje = \" \";\n    }\n    store.addNotification({\n        title: titulo,\n        message: mensaje,\n        type: tipo,\n        insert: \"top\",\n        container: \"top-center\",\n        animationIn: [\"animated\", \"fadeIn\"],\n        animationOut: [\"animated\", \"fadeOut\"],\n        dismiss: {\n          duration: 5000,\n          onScreen: true\n        }\n      });\n}\nexport default Notification;","export var funtionUpdateList = null;\nvar funtionUpdateList1 = () => {};\nvar funtionUpdateList2 = () => {};\n\nexport function setUpdateList1(updateList) {\n    funtionUpdateList1 = updateList;\n    funtionUpdateList = () => {\n        funtionUpdateList1();\n        funtionUpdateList2();\n    };\n};\n\nexport function setUpdateList2(updateList) {\n    funtionUpdateList2 = updateList;\n    funtionUpdateList = () => {\n        funtionUpdateList1();\n        funtionUpdateList2();\n    };\n};\n\nexport default funtionUpdateList;","import React from \"react\";\nimport FileClient from \"solid-file-client\";\nimport auth from \"solid-auth-client\";\nimport ReactFileReader from \"react-file-reader\";\nimport { useWebId } from \"@solid/react\";\nimport properties from \"../commons/Properties\";\nimport { Button } from \"react-bootstrap\";\nimport I from \"../commons/Internationalization\";\nimport notification from \"../basics/ToastNotification\";\nimport { funtionUpdateList } from \"../solidPod/UpdateList\";\n\nexport const UploadHook = () => {\n    let webid = String(String(useWebId()).replace(properties.profile, properties.myFolder));\n\n\n    class UploadToPod extends React.Component {\n\n        handleFiles = (files) => {\n            var reader = new FileReader();\n            reader.onload = async function () {\n                let fc = new FileClient(auth);\n                let fileName = files[0].name;\n                let url = webid + fileName;\n                await fc.createFile(url, reader.result, \"text/turtle\");\n                notification(\"success\", I.Option.ArchivoSubido, I.Option.ArchivoSubidoa + properties.myFolder + fileName);\n                await funtionUpdateList();\n                console.log(\"He pasao por aqui\")\n            };\n            reader.readAsText(files[0]);\n\n\n\n        };\n\n        render() {\n            return (\n                <ReactFileReader handleFiles={this.handleFiles} fileTypes={\".geojson\"}>\n                    <Button data-testid=\"subirjson\">{I.Option.Subir}</Button>\n                </ReactFileReader>\n            );\n        }\n    }\n    return (<UploadToPod />);\n};\n\nexport default UploadHook;","import React from \"react\";\nimport { Button } from \"react-bootstrap\";\n\nclass SubmitButton extends React.Component {\n  render() {\n    return (\n        <Button\n          className= {this.props.class}\n          disabled={this.props.disabled}\n          onClick={ () => this.props.onClick() }\n        >\n          {this.props.text}\n        </Button>\n    );\n  }\n}\n\nexport default SubmitButton;","import React from \"react\";\nimport Button from \"../basics/BasicButton\";\nimport properties from \"../commons/Properties\";\nimport I from \"../commons/Internationalization\";\nimport notification from \"../basics/ToastNotification\";\nimport { setUpdateList1 } from \"../solidPod/UpdateList\";\n\nimport \"../../static/css/Main.css\";\n\nconst auth = require(\"solid-auth-client\");\nconst FC = require(\"solid-file-client\");\nconst fc = new FC(auth);\n\n\nexport async function getFiles() {\n  let storage = \"\";\n  await auth.trackSession(session => {\n      if (session)\n          storage = session.webId;\n  });\n\n  storage = storage.replace(properties.profile, properties.myFolder);\n  let folder;\n\n  await fc.readFolder(storage)\n    .then((content) => { folder = content; })\n    .catch((err) => (folder = null));\n\n  if (folder === null) {\n    return null;\n  }\n\n  return folder.files;\n}\n\nasync function readRoute(handleFiles, URL) {\n\n  let rutaView = null;\n  if (fc.itemExists(URL)) {\n    rutaView = await fc.readFile(URL);\n  }\n  var rutaViewStJ = null;\n  try {\n    rutaViewStJ = JSON.parse(rutaView);\n  } catch (error) {\n    notification(\"danger\", I.Option.ErrorMapaIncompatible);\n    return;\n  }\n\n  handleFiles(rutaViewStJ);\n\n\n}\n\nexport function filesToButtons(files, handleFiles) {\n  const buttons = [];\n\n  if (files === null) {\n    notification(\"info\", I.Option.Rutas404);\n    return;\n  }\n\n  for (const [index, value] of files.entries()) {\n    if (value.name.endsWith(\".geojson\")) {\n      let name = String(String(value.name).replace(\".geojson\", \"\"));\n\n      buttons.push(\n        <div class=\"btn-list\" key={index}>\n          <Button\n            class=\"btn btn-light\"\n            text={name}\n            disabled={false}\n            onClick={() => readRoute(handleFiles, value.url)}\n            id={name} />\n        </div>\n      );\n    }\n  }\n  return buttons;\n}\n\nclass ListClass extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      lista: (I.Option.Actualizar)\n    };\n    this.updateList = this.updateList.bind(this);\n    setUpdateList1(this.updateList.bind(this));\n    this.updateList();\n  }\n\n  async updateList() {\n    //Obtenemos lista de urls del pod\n    let asincFiles = getFiles();\n\n    //Para que espere a que se carguen las urls del pod se usa await\n    let files = await asincFiles;\n\n    let filesHtml = <div className=\"overflow\">{filesToButtons(files, this.props.handleFiles)} </div>;\n\n    //Para que se recargue el {this.state.lista} de mas abajo hay que usar la funcion setState\n    this.setState({\n      lista: filesHtml,\n    });\n  }\n\n  render() {\n    return (\n      <div>\n\n        {/* <Button\n          data-testid=\"btmaplist\"\n\n          text={I.Option.Actualizar}\n          disabled={false}\n          onClick={() => this.updateList()}\n        /> */}\n        <h2>{I.Option.ListaRutas}</h2>\n        {this.state.lista}\n      </div>\n    );\n  }\n}\n\nexport default ListClass;","import React from \"react\";\nimport L from \"leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport styled from \"styled-components\";\nimport Button from \"../basics/BasicButton\";\nimport MapList from \"../solidPod/MapList\";\nimport properties from \"../commons/Properties\";\nimport \"../../static/css/Main.css\";\nimport I from \"../commons/Internationalization\";\nimport notification from \"../basics/ToastNotification\";\n\nconst Wrapper = styled.div`\n    width: 1080px;\n    height: 566px;\n`;\n\n\n\nclass Map extends React.Component {\n\n    constructor(props) {\n\n        super(props);\n        this.actual = 0;\n        this.layer = null;\n    }\n\n    componentDidMount() {\n        this.map = L.map(\"map\", {\n            center: [43.3602900, -5.8447600],\n            zoom: 10,\n            zoomControl: false\n        });\n        this.setLayer();\n    }\n\n    handleFiles(fileJson) {\n        var error_center = 0;\n\n        try {\n            let center = [];\n            center[0] = fileJson.features[0].geometry.coordinates[0][1];\n            center[1] = fileJson.features[0].geometry.coordinates[1][0];\n            this.map.setView(center, 15);\n\n        } catch (error) {\n            error_center = 1;\n        }\n        try {\n            L.geoJSON(fileJson).addTo(this.map);\n            if(error_center === 1){\n                notification(\"warning\", I.Option.ErrorCentro, I.Option.ErrorCentroDescripcion);\n            }\n        }catch (error) {\n            notification(\"danger\", I.Option.ErrorMapaIncompatible);\n        }\n    }\n\n    async cambiar() {\n        this.actual = this.actual + 1;\n        if (this.actual >= properties.layers.length) {\n            this.actual = 0;\n        }\n\n        this.layer.removeFrom(this.map);\n        this.setLayer();\n    }\n\n    setLayer() {\n        this.layer = L.tileLayer(\n            properties.layers[this.actual], {\n            detectRetina: true,\n            maxZoom: 20,\n            maxNativeZoom: 17\n        });\n        this.layer.addTo(this.map);\n    }\n\n\n    render() {\n        return (\n            <React.Fragment>\n                <div className=\"row\">\n\n                    <div className=\"col-sm\">\n                        <div>\n                            <Button\n                                class=\"btn\"\n\n                                disabled={false}\n                                onClick={() => this.cambiar()}\n                                data-testid=\"cambiarLayer\"\n\n                                text={I.Option.Layer}\n                            />\n                            <Wrapper id=\"map\" data-testid=\"map\" />\n                        </div>\n                        <div className=\"col-sm\">\n                            <MapList handleFiles={this.handleFiles.bind(this)} />\n\n                        </div>\n                    </div>\n                </div>\n            </React.Fragment>\n\n        );\n    }\n}\n\nexport default Map;","import React from \"react\";\n\nclass ImputField extends React.Component {\n  render() {\n    return (\n      <div className=\"ImputField\">\n        <input\n          className=\"form-control\"\n          type={this.props.type}\n          placeholder={this.props.placeholder}\n          value={this.props.value}\n          onChange={(e) => this.props.onChange(e.target.value)}\n          data-testid=\"input\"\n          disabled\n        />\n      </div>\n    );\n  }\n}\n\nexport default ImputField;","import React from \"react\";\nimport { useLDflexList } from \"@solid/react\";\nimport Button from \"../basics/BasicButton\";\nimport I from \"../commons/Internationalization\";\n\nfunction getMarcados() {\n    var checkedValue = [];\n    var indice = 0;\n    var inputElements = document.getElementsByName(\"friendbox\");\n    for (var i = 0; inputElements[i]; ++i) {\n        if (inputElements[i].checked) {\n            checkedValue[indice] = inputElements[i].value;\n            ++indice;\n        }\n    }\n    return checkedValue;\n}\n\nfunction ShowFriends({ src, enviar }) {\n\n    let container = (items) => (\n        <div>\n            <h4>{I.Option.Amigos}</h4>\n            {items}\n            <Button\n                class=\"btn\"\n                text={I.Option.Enviar}\n                disabled={false}\n                onClick={() => enviar(getMarcados())}\n            />\n        </div>\n    );\n    let children = (item, index) => (\n        <div key={index}>\n            <input className=\"form-check-input\" type=\"checkbox\" name=\"friendbox\" value={`${item}`} />\n            <label> {`${item}`} </label>\n        </div>\n    );\n\n    const items = useLDflexList(src)\n        .filter(() => true)\n        .slice(0, Infinity)\n        .map(children);\n    return container ? container(items) : items;\n}\n\nexport default ShowFriends;","import React from \"react\";\nimport Button from \"../basics/BasicButton\";\nimport properties from \"../commons/Properties\";\nimport I from \"../commons/Internationalization\";\nimport notification from \"../basics/ToastNotification\";\nimport { setUpdateList2 } from \"../solidPod/UpdateList\";\n\nimport \"../../static/css/Main.css\";\n\nconst auth = require(\"solid-auth-client\");\nconst FC = require(\"solid-file-client\");\nconst fc = new FC(auth);\n\n\nexport async function getFiles() {\n  let storage = \"\";\n  await auth.trackSession(session => {\n      if (session)\n          storage = session.webId;\n  });\n\n  storage = storage.replace(properties.profile, properties.myFolder);\n  let folder;\n\n  await fc.readFolder(storage)\n    .then((content) => { folder = content; })\n    .catch((err) => (folder = null));\n\n  if (folder === null) {\n    return null;\n  }\n\n  return folder.files;\n}\n\nexport function filesToButtons(files, handleFiles) {\n  const buttons = [];\n\n  if (files === null) {\n    notification(\"info\", I.Option.Rutas404);\n    return;\n  }\n\n  for (const [index, value] of files.entries()) {\n    buttons.push(\n      <div class=\"btn-list\" key={index}>\n        <Button\n          class=\"btn btn-light\"\n          text={value.name}\n          disabled={false}\n          onClick={() => handleFiles(value.url)}\n          id={value.name} />\n      </div>\n    );\n  }\n  return buttons;\n}\n\nclass ListClass extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      lista: (I.Option.Actualizar)\n    };\n    this.updateList = this.updateList.bind(this);\n    setUpdateList2(this.updateList.bind(this));\n    this.updateList();\n  }\n\n  async updateList() {\n    //Obtenemos lista de urls del pod\n    let asincFiles = getFiles();\n\n    //Para que espere a que se carguen las urls del pod se usa await\n    let files = await asincFiles;\n\n    let filesHtml = <div className=\"overflow\">{filesToButtons(files, this.props.handleFiles)} </div>;\n\n    //Para que se recargue el {this.state.lista} de mas abajo hay que usar la funcion setState\n    this.setState({\n      lista: filesHtml,\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <h3>{I.Option.ListaArchivos}</h3>\n        {this.state.lista}\n      </div>\n    );\n  }\n}\n\nexport default ListClass;","import React from \"react\";\n\nimport { useWebId } from \"@solid/react\";\nimport InputField from \"../basics/ImputField\";\nimport FileClient from \"solid-file-client\";\nimport auth from \"solid-auth-client\";\nimport properties from \"../commons/Properties\";\nimport request from \"request\";\nimport ShowFriends from \"./ShowFriends\";\nimport I from \"../commons/Internationalization\";\nimport notification from \"../basics/ToastNotification\";\nimport FileList from \"./FileList\";  \n\n\n\nasync function sendNotification(userWebId, friendWebId, fileId) {\n    request({\n        method: \"POST\",\n        uri: friendWebId,\n        body: `@prefix as: <https://www.w3.org/ns/activitystreams#> .\n            @prefix schema: <http://schema.org/> .\n            <> a as:Follow ;\n            schema:Action \"shareRoute\" ;\n            schema:agent <${userWebId}> ;\n            schema:identifier \"${fileId}\" .`,\n        headers: {\n            \"Content-Type\": \"text/turtle\"\n        }\n\n    },\n        function (error, response, body) {\n            if (!error) {\n                notification(\"success\", I.Option.Enviada);\n            } else {\n                notification(\"danger\", I.Option.ErrorI);\n            }\n            return !error;\n        });\n}\n\nexport const Hook = () => {\n    let folderId = String(String(useWebId()).replace(properties.profile, properties.myFolder));\n    let userId = useWebId();\n\n\n\n    class Share extends React.Component {\n        constructor(props) {\n            super(props);\n            this.state = {\n                archivo: folderId,\n                amigo: \"\",\n                error: \"\"\n            };\n        }\n\n        async enviar(amigos) {\n            if (!this.state.archivo) {\n                notification(\"warning\", I.Option.ErrorArchivoNull);\n                return;\n            }\n\n            if (amigos.length <= 0) {\n                notification(\"warning\", I.Option.ErrorAmigosNull);\n                return;\n            }\n\n            //let publicRute = String(this.state.archivo).replace(properties.myFolder, \"\") + properties.shareFolder;\n            let publicRute = String(String(this.state.archivo).replace(properties.myFolder, properties.shareFolder));\n\n            //Copiamos el archivo a la carpeta publica\n            const fc = new FileClient(auth);\n            //console.log(\"Copiando \"+this.state.archivo+\" a \" +publicRute)\n\n            try {\n                await fc.copyFile(this.state.archivo, publicRute);\n            } catch (error) {\n                console.log(error);\n                if (error.status === 403) {\n                    notification(\"danger\", I.Option.Error403, I.Option.ErrorPermisos);\n                }\n                else if (error.status === 404) {\n                    notification(\"danger\", I.Option.Error404, I.Option.Archivo404);\n                }\n                else {\n                    notification(\"danger\", I.Option.ErrorI);\n                }\n                return;\n            }\n\n\n            for (var i = 0; i < amigos.length; ++i) {\n                this.state.amigo = amigos[i];\n\n                if (!this.state.amigo) {\n                    break;\n                }\n\n                let friendInbox = String(this.state.amigo).replace(properties.profile, \"/\") + properties.inboxSinBarra;\n\n                //Enviamos la notificacion a nuestro amigo\n                await sendNotification(userId, friendInbox, publicRute);\n                //console.log(\"Enviando... \"+userId+\" \"+friendInbox+\" \"+publicRute)\n            }\n\n        }\n\n        setInputValue(property, val) {\n            val = val.trim();\n            this.setState({\n                [property]: val\n            });\n        }\n\n        handleChange(e) {\n            this.setState({\n                amigo: e.target.value\n            });\n        }\n        handleFiles(val) {\n            this.setInputValue(\"archivo\", val);\n        }\n\n        render() {\n            return (\n                <div className=\"LoginForm\">\n\n                    <h2 data-testid=\"comp\">{I.Option.Compartir}</h2>\n                    <p data-testid=\"uri\">{I.Option.URI}</p>\n                    <InputField\n                        type=\"text\"\n                        class=\"form-control\"\n                        value={this.state.archivo ? this.state.archivo : \"\"}\n                        onChange={(val) => this.setInputValue(\"archivo\", val)}\n                        data-testid=\"input\"\n\n                    />\n                    <FileList handleFiles={this.handleFiles.bind(this)} />\n                    <ShowFriends src=\"user.friends\" enviar={this.enviar.bind(this)} />\n\n                    {this.state.error}\n\n\n                </div>\n            );\n        }\n    }\n    return (<Share />);\n};\nexport default Hook;","import React from \"react\";\nimport campanita from \"../../static/images/campanita.png\";\nimport properties from \"../commons/Properties\";\nimport Button from \"../basics/BasicButton\";\nimport { useWebId } from \"@solid/react\";\nimport \"../../static/css/Main.css\";\nimport I from \"../commons/Internationalization\";\n\nasync function getNNotifications() {\n    const auth = require(\"solid-auth-client\");\n    const FC = require(\"solid-file-client\");\n    const fc = new FC(auth);\n\n    let storage = \"\";\n    await auth.trackSession(session => {\n        if (session)\n            storage = session.webId;\n    });\n\n    storage = storage.replace(properties.profile, properties.inbox);\n    let folder;\n\n    await fc.readFolder(storage)\n        .then((content) => { folder = content; })\n        .catch((err) => (folder = null));\n    let result = 0;\n    if (folder) {\n        result = folder.files.length;\n    }\n    return result;\n}\n\nconst NotificationHook = () => {\n\n    let webid = String(String(useWebId()).replace(properties.profile, properties.inbox));\n\n    class Notification extends React.Component {\n\n        _isMounted = false;\n\n        constructor(props) {\n            super(props);\n            this.state = {\n                nNotifications: \"\",\n                inboxUrl: webid\n            };\n        }\n\n        componentDidMount() {\n            this._isMounted = true;\n            this.updateNotifications();\n        }\n\n        componentWillUnmount() {\n            this._isMounted = false;\n        }\n\n        async updateNotifications() {\n            var num = String(await getNNotifications());\n            if (this._isMounted) {\n                this.setState({\n                    nNotifications: num,\n                });\n            }\n        }\n\n\n        render() {\n            return (\n                <div className=\"notification\">\n                    <img data-testid=\"imgnoti\" src={campanita} className=\"Campanita-ico\" alt=\"ico\" />\n                    <a data-testid=\"not\" href={this.state.inboxUrl}>{I.Option.Notificaciones}</a>  <span className=\"badge\">{this.state.nNotifications}</span>\n                    <Button\n                        text={I.Option.Refrescar}\n                        class=\"icon-refresh\"\n                        data-testid=\"btnoti\"\n                        disabled={false}\n                        onClick={() => this.updateNotifications()}\n                        testid=\"btNot\"\n                    />\n\n                </div>\n            );\n        }\n    }\n\n    return (<Notification />);\n};\n\nexport default NotificationHook;","import React from \"react\";\nimport I from \"../commons/Internationalization\";\n\nclass ISelector extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            selected: \"es\"\n        };\n    }\n\n    async setInputValue() {\n        var select = document.getElementById(\"select_languaje\");\n        var val = select.value;\n\n        I.change(val, this.props.update);\n        this.setState({\n            selected: val\n        });\n    }\n\n    render() {\n        return (\n            <select id=\"select_languaje\"  data-testid=\"input\" onChange={() => this.setInputValue()}>\n                <option value=\"es\"> {I.Option.SP}</option>\n                <option value=\"en\">{I.Option.EN}</option>\n            </select>\n        );\n    }\n}\n\nexport default ISelector;","import React from \"react\";\nimport { LoggedOut, LoggedIn } from \"@solid/react\";\n\nimport logo from \"../static/images/ViaDe.svg\";\nimport User from \"./login/User\";\nimport LoginButton from \"./login/LoginButton\";\nimport UploadToPod from \"./solidPod/UploadToPod\";\nimport Map from \"./map/Map\";\nimport Share from \"./share/Share\";\nimport Notification from \"./notifications/Notification\";\nimport I from \"./commons/Internationalization\";\nimport ISelector from \"./login/ISelector\";\nimport ReactNotification from \"react-notifications-component\";\n\nimport \"react-notifications-component/dist/theme.css\";\n\nimport \"../static/css/Main.css\";\n\nclass Main extends React.Component {\n\n  update() {\n    this.forceUpdate();\n  }\n\n  render() {\n    return (\n      <div className=\"app\" data-testid=\"App\">\n        <div className=\"logout\">\n          <LoggedOut>\n            <img src={logo} alt=\"logo\" data-testid=\"logo\" />\n            \n            <h2 data-testid=\"IniciaSesion\" >{I.Option.Sesion}</h2>\n            <div>\n            <LoginButton />\n            </div>\n          </LoggedOut>\n        </div>\n\n        <LoggedIn>\n          <ReactNotification />\n          <div className=\"nav ml-30\">\n            <User />\n            <Notification />\n            <ISelector update={this.update.bind(this)} />\n            <LoginButton />\n          </div>\n\n          <div className=\"container\" data-testid=\"container\">\n            <div className=\"row\">\n              <div className=\"col-sm\">\n                <Map />\n              </div>\n              <div className=\"col-sm\">\n                <div className =\"ml-3\">\n                <UploadToPod />\n                <p>{I.Option.HerramientaRutas}<a href=\"http://geojson.io/\" target=\"_blank\" rel=\"noopener noreferrer\">{I.Option.HerramientaRutasEnlace}</a></p>\n                </div>\n                <Share />\n              </div>\n            </div>\n\n          </div>\n\n\n        </LoggedIn>\n      </div>\n    );\n  }\n}\n\nexport default Main;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./static/css/Main.css\";\nimport Main from \"./components/Main\";\n//import * as serviceWorker from \"./serviceWorker\";\n\n\nReactDOM.render(\n\n        <Main />\n    , document.getElementById(\"root\")\n\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n"],"sourceRoot":""}